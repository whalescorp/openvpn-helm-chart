apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        type: openvpn
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.predefinedKeys.Enabled }}
        command: ["/etc/openvpn/setup/configure.sh", "--skip-cert-gen"]
        {{- else }}
        command: ["/etc/openvpn/setup/configure.sh"]
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.port }}
          name: openvpn
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        resources:
          requests:
            cpu: "{{.Values.resources.requests.cpu}}"
            memory: "{{.Values.resources.requests.memory}}"
          limits:
            cpu: "{{.Values.resources.limits.cpu}}"
            memory: "{{.Values.resources.limits.memory}}"
        volumeMounts:
          - mountPath: /etc/openvpn/setup
            name: openvpn
            readOnly: false
          {{- if .Values.predefinedKeys.Enabled }}
          - name: ca_crt
            mountPath: "/etc/openvpn/certs/pki/ca.crt"
            subPath: certs.ca_crt
          - name: server_crt
            mountPath: "/etc/openvpn/certs/pki/issued/server.crt"
            subPath: certs.server_crt
          - name: server_key
            mountPath: "/etc/openvpn/certs/pki/private/server.key"
            subPath: certs.server_key
          - name: tlscrypt
            mountPath: "/etc/openvpn/certs/pki/tlscrypt"
            subPath: certs.tlscrypt
          - name: dh_pem
            mountPath: "/etc/openvpn/certs/pki/dh.pem"
            subPath: certs.dh_pem
          {{- else }}
          - mountPath: /etc/openvpn/certs
            name: certs
            readOnly: false
          {{- end }}
      volumes:
        - name: openvpn
          configMap:
            name: {{ template "fullname" . }}
            defaultMode: 0775
        - name: certs
          {{- if .Values.persistence.Enabled }}
          persistentVolumeClaim:
            claimName: {{ template "fullname" . }}
          {{- else if .Values.predefinedKeys.Enabled }}
          secret:
            secretName: openvpn-predefined-keys
          {{- else }}
          emptyDir: {}
          {{- end -}}
